{
  "@context": {
    "biotools": "https://bio.tools/ontology/",
    "bsc": "http://bioschemas.org/",
    "bsct": "http://bioschemas.org/types/",
    "dct": "http://purl.org/dc/terms/",
    "edam": "http://edamontology.org/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "sc": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@graph": [
    {
      "@id": "https://bio.tools/pyconsfold",
      "@type": "sc:SoftwareApplication",
      "dct:conformsTo": "https://bioschemas.org/profiles/ComputationalTool/0.6-DRAFT",
      "sc:additionalType": [
        "Command-line tool",
        "Library"
      ],
      "sc:applicationSubCategory": [
        {
          "@id": "edam:topic_0130"
        },
        {
          "@id": "edam:topic_0736"
        },
        {
          "@id": "edam:topic_2275"
        }
      ],
      "sc:citation": {
        "@id": "https://doi.org/10.1101/2021.02.08.430195"
      },
      "sc:description": "A fast and easy tool for modelling and docking using distance predictions.\n\nA python modelling framework built on top of CNS. Support for both trRosetta distance predictions and CASP format contact predictions, both binary and distance based.\n\npyconsFold require a working installation of CNS. This needs to be done manually due to license.",
      "sc:featureList": [
        {
          "@id": "edam:operation_0267"
        },
        {
          "@id": "edam:operation_3899"
        },
        {
          "@id": "edam:operation_0303"
        },
        {
          "@id": "edam:operation_0474"
        },
        {
          "@id": "edam:operation_0272"
        }
      ],
      "sc:license": "GPL-3.0",
      "sc:name": "pyconsFold",
      "sc:url": "https://github.com/johnlamb/pyconsfold"
    },
    {
      "@id": "https://doi.org/10.1101/2021.02.08.430195",
      "@type": "sc:CreativeWork"
    }
  ]
}