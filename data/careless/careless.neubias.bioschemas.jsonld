{
  "@context": {
    "dc": "http://dcterms/",
    "owl": "http://www.w3.org/2002/07/owl#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "xsd": "http://www.w3.org/2001/XMLSchema#"
  },
  "@id": "http://biii.eu/careless",
  "@type": "http://schema.org/SoftwareApplication",
  "http://schema.org/applicationCategory": [
    {
      "@id": "http://edamontology.org/operation_Image_enhancement"
    },
    {
      "@id": "http://edamontology.org/operation_Image_deconvolution"
    },
    {
      "@id": "http://edamontology.org/operation__RDyyXyhf1oHK93opXhEnRND"
    }
  ],
  "http://schema.org/dateCreated": "2020-03-09T12:51:29",
  "http://schema.org/dateModified": "2020-03-09T12:51:29",
  "http://schema.org/description": "<p><span><span><span>Deep learning based image restoration methods have recently been made available to restore images from under-exposed imaging conditions, increase spatio-temporal resolution (CARE) or self-supervised image denoising (Noise2Void). These powerful methods outperform conventional state-of-the-art methods and leverage down-stream analyses significantly such as segmentation and quantification. </span></span></span></p>\r\n\r\n<p><span><span><span>To bring these new tools to a broader platform in the image analysis community, we developed a simple Jupyter based graphical user interface for CARE and Noise2Void, which lowers the burden for non-programmers and biologists to access these powerful methods in their daily routine. &nbsp;CARE-<em>less</em> supports temporal, multi-channel image and volumetric data and many file formats by using the bioformats library. The user is guided through the different computation steps via inline documentation. For standard use cases, the graphical user interface exposes the most relevant parameters such as patch size and number of training iterations, while expert users still have access to advanced parameters such as U-net depth and kernel sizes. In addition, CARE-<em>less </em>provides visual outputs for training convergence and restoration quality. Any project settings can be stored and reused from command line for processing on compute clusters. The generated output files preserve important meta-data such as pixel sizes, axial spacing and time intervals. </span></span></span></p>\r\n",
  "http://schema.org/featureList": [
    {
      "@id": "http://edamontology.org/operation__RDyyXyhf1oHK93opXhEnRND"
    },
    {
      "@id": "http://edamontology.org/operation_Image_enhancement"
    },
    {
      "@id": "http://edamontology.org/operation_Image_deconvolution"
    }
  ],
  "http://schema.org/license": "GNU General Public License v2.0",
  "http://schema.org/name": "CAREless",
  "http://schema.org/publisher": "csommer"
}